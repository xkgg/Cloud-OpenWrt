name: Cloud OpenWrt

# Add a button to trigger the workflow
on: 
  repository_dispatch:
  workflow_dispatch:
  
  push:
    branches:
      - main
    paths:
      - 'README.md'
      - 'script.sh'
      - 'config.sh'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  SCRIPT_SH: script.sh
  CONFIG_SH: config.sh
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build_openwrt:
    name: Build OpenWrt and release
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: main

    - name: 部署编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /usr/local/lib/android \
          /opt/ghc \
          /etc/php
        sudo -E apt-get -y purge azure-cli* docker* ghc* zulu* hhvm* llvm* firefox* google* dotnet* aspnetcore* powershell* openjdk* adoptopenjdk* mysql* php* mongodb* moby* snap* || true
        sudo -E apt-get update
        sudo -E apt-get -y install ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev qemu-img
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean

    - name: 克隆源码
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="date: %cd<br/>commit: %s<br/>commit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "tag_name=$(date +%Y%m%d)" >> $GITHUB_ENV

    - name: 更新 feeds
      run: |
        chmod +x $SCRIPT_SH
        ./$SCRIPT_SH
        cd openwrt
        #sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
        ./scripts/feeds update -a

    - name: 安装 feeds
      run: |
        cd openwrt
        ./scripts/feeds install -a

    - name: 加载自定义 configuration
      run: |
        chmod +x $CONFIG_SH
        ./$CONFIG_SH

    - name: 下载 package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译 firmware
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin
        echo "::set-output name=status::success"

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages feeds.buildinfo openwrt-x86-64-generic-kernel.bin openwrt-x86-64-generic-squashfs-rootfs.img openwrt-x86-64-generic.manifest sha256sums version.buildinfo
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}

    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        name: ${{ env.DATE }} ❤️ | OpenWrt 自动编译
        allowUpdates: true
        tag: ${{ env.tag_name }}
        commit: main
        token: ${{ secrets.actions_release }}
        body: |
          编译使用版本:
          ${{ env.useVersionInfo }}

          刷机固件简介：
            打包日期：${{ env.PACKAGED_OUTPUTDATE }}
            默认IP：192.168.1.1 默认用户名密码： root/password
        artifacts: "${{ env.FIRMWARE }}/*"

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      with:
        keep_latest: 3
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.actions_release }}
